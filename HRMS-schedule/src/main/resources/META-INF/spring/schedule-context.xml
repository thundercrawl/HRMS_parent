<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:property-placeholder
		ignore-resource-not-found="true"
		location="classpath*:META-INF/config/app*.properties,
            								classpath*:META-INF/config/database.properties" />
       								
	<context:annotation-config />
	<!-- 自动扫描 -->
	<context:component-scan base-package="hrms"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!-- Druid 数据库源配置 -->
	 <bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${hibernate.driverClass}" />
		<property name="jdbcUrl" value="${hibernate.jdbcUrl}"></property>
		<property name="user" value="${hibernate.user}" />
		<property name="password" value="${hibernate.password}" />

		<property name="minPoolSize" value="${hibernate.minPoolSize}" />
		<property name="maxPoolSize" value="${hibernate.maxPoolSize}" />
		<property name="maxIdleTime" value="${hibernate.maxIdleTime}" />
		<property name="acquireIncrement" value="${hibernate.acquireIncrement}" />
		<property name="maxStatements" value="${hibernate.maxStatements}" />
		<property name="initialPoolSize" value="${hibernate.initialPoolSize}" />
		<property name="idleConnectionTestPeriod" value="${hibernate.idleConnectionTestPeriod}" />
		<property name="acquireRetryAttempts" value="${hibernate.acquireRetryAttempts}" />
		<property name="breakAfterAcquireFailure" value="${hibernate.breakAfterAcquireFailure}" />
		<property name="testConnectionOnCheckout" value="${hibernate.testConnectionOnCheckout}" />
	</bean>

	<bean id="abstractSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		abstract="true">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
				<prop key="hibernate.default_batch_fetch_size">${hibernate.default_batch_fetch_size}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				
				<prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
			</props>
		</property>
	</bean>

	<bean id="sessionFactory" parent="abstractSessionFactory">
		<property name="dataSource" ref="masterDataSource" />
		
		<property name="packagesToScan">
			<list>
				<value>hrms.entity</value>
			</list>
		</property>
	</bean>

	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<aop:config>
		<aop:pointcut id="pointcut"
			expression="execution(* hrms.service..*.*(..))" />
	
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<tx:method name="has*" read-only="true" />

			<tx:method name="*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="do*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="add*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="start*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="apply*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="check*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="send*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="bind*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="create*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="change*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
			<tx:method name="sync*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException" />
		</tx:attributes>
	</tx:advice> 


	<bean id="appProperties" name="appProperties" class="hrms.model.common.AppProperties"/>

	 <import resource="classpath:META-INF/spring/app-schedule.xml" />
</beans>